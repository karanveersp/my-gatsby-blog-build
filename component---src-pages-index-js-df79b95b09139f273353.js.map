{"version":3,"sources":["webpack:///./src/components/description.js","webpack:///./src/pages/index.js"],"names":["Description","description","useStaticQuery","site","siteMetadata","className","pageQuery","BlogIndex","data","location","posts","allMarkdownRemark","edges","title","to","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","date","margin","tags","tag","display","marginRight","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"iLA+BeA,EArBK,WAClB,IAUQC,EAVKC,yBAAe,cAUCC,KAAKC,aAA1BH,YACR,OACE,yBAAKI,UAAU,eACb,2BACGJ,K,oCCyCIK,GAFEC,UAxDG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAQF,EAAKG,kBAAkBC,MACrC,OACE,kBAAC,IAAD,CAAQH,SAAUA,GAChB,kBAAC,IAAD,CAAKI,MAAM,cACX,kBAAC,EAAD,MACA,kBAAC,OAAD,CAAMR,UAAU,UAAUS,GAAG,UAA7B,SAGA,kBAAC,OAAD,CAAMT,UAAU,UAAUS,GAAG,SAA7B,QAGCJ,EAAMK,KAAI,YAAe,IAAD,EAAXC,EAAW,EAAXA,KACNH,EAAQG,EAAKC,YAAYJ,OAASG,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWV,GAAIE,EAAKE,OAAOC,MACjDN,IAIL,+BAAQG,EAAKC,YAAYQ,MACzB,wBAAIJ,MAAO,CAACK,OAAQ,IAApB,UACCV,EAAKC,YAAYU,YADlB,aACC,EAAuBZ,KAAI,SAAAa,GAC1B,OACE,wBAAIR,IAAKQ,EAAKP,MAAO,CAAEQ,QAAS,SAAUC,YAAa,SACvD,+BACA,kBAAC,OAAD,CAAMhB,GAAI,SAAWc,GAClBA,UAQT,iCACE,uBACEG,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYhB,aAAee,EAAKiB,kBAazC","file":"component---src-pages-index-js-df79b95b09139f273353.js","sourcesContent":["/**\n * Description component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Description = () => {\n  const data = useStaticQuery(graphql`\n    query DescriptionQuery {\n      site {\n        siteMetadata {\n          description\n        }\n      }\n    }\n  `)\n\n  const { description } = data.site.siteMetadata\n  return (\n    <div className=\"description\">\n      <p>\n        {description}\n      </p>\n    </div>\n  )\n}\n\nexport default Description\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Description from \"../components/description\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <Layout location={location}>\n      <SEO title=\"All posts\" />\n      <Description />\n      <Link className=\"navLink\" to=\"/about\">\n        About\n      </Link>\n      <Link className=\"navLink\" to=\"/tags\">\n        Tags\n      </Link>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n             \n              <small>{node.frontmatter.date}</small>\n              <ul style={{margin: 0}}>\n              {node.frontmatter.tags?.map(tag => {\n                return (\n                  <li key={tag} style={{ display: \"inline\", marginRight: \"1rem\"}}>\n                  <small>\n                  <Link to={\"/tags/\" + tag}>\n                    {tag}\n                  </Link>\n                  </small>\n                  </li>\n                )\n              })}\n              </ul>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}