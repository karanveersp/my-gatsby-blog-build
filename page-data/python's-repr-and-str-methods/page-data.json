{"componentChunkName":"component---src-templates-blog-post-js","path":"/python's-repr-and-str-methods/","result":{"data":{"markdownRemark":{"id":"c64e6e0f-e1c6-553e-be94-8d976676f21a","excerpt":"Most python developers are quite familiar with the __str__ method. It’s Python equivalent of the toString() method in Java. Here’s an example: And the output is…","html":"<p>Most python developers are quite familiar with the <code>__str__</code> method. It’s Python equivalent of the <code>toString()</code> method in Java.</p>\n<p>Here’s an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Movie</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> release_year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>release_year <span class=\"token operator\">=</span> release_year\n\ncool_movie <span class=\"token operator\">=</span> Movie<span class=\"token punctuation\">(</span><span class=\"token string\">\"The Revenant\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2015</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cool_movie<span class=\"token punctuation\">)</span></code></pre></div>\n<p>And the output is…</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">&lt;__main__.Movie object at 0x7fe3f13bcfa0&gt;</code></pre></div>\n<p>This is return value of the default <code>__str__</code> method for all python objects. It’s not particularly helpful when you want to see what this object represents.</p>\n<p>Lets add our own <code>__str__</code> method:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Movie(name=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">, release_year=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>release_year<span class=\"token punctuation\">}</span></span><span class=\"token string\">)\"</span></span></code></pre></div>\n<p>Adding this to the class changes the output of the print function.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">Movie(name=The Revenant, release_year=2015)</code></pre></div>\n<p>Much better. Now we know the object type as well as its state.</p>\n<p>Notice you didn’t have to actually invoke the <code>__str__</code> method. The\n<code>print</code> function automatically calls the <code>__str__</code> method of the object\nit is given.</p>\n<p>There’s also a <code>__repr__</code> method which can be called on objects:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cool_movie<span class=\"token punctuation\">.</span>__repr__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Which gives</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">&lt;__main__.Movie object at 0x7fe3f13dd4c0&gt;</code></pre></div>\n<p>This is like our default str method. So why the need for two kinds of string returning methods?</p>\n<p>The point of the <code>__str__</code> method is to return a <em>human readable</em> string representation\nof the object.</p>\n<p>The purpose of the <code>__repr__</code> method is to return a <em>formal, uniquely identifiable</em> string representation.</p>\n<p>The <code>__repr__</code> method is often used for debugging, and the convention is to provide a string that a developer can use\nto <em>recreate</em> the object in that state.</p>\n<p>So for our example, this would qualify as a good implementation of <code>__repr__</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'Movie(name=\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\",release_year=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>release_year<span class=\"token punctuation\">}</span></span><span class=\"token string\">)'</span></span></code></pre></div>\n<p>which outputs</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">Movie(name=&quot;The Revenant&quot;,release_year=2015)</code></pre></div>\n<p>Note that we used the <em>f</em> string with single quotes, so we could wrap the name value with double quotes.</p>\n<p>The cool thing is that the return value of the repr method can actually be passed to the <code>eval()</code> builtin function.\nThe <code>eval()</code> function can be used to a string passed to it as a python expression.</p>\n<p>For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1 + 1\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># returns 2</span></code></pre></div>\n<p>Pretty cool! We can then try:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">movie <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>cool_movie<span class=\"token punctuation\">.</span>__repr__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>movie<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Movie(name=The Revenant, release_year=2015)</span></code></pre></div>\n<p>Here we make use of both the repr and str methods. The repr value comes in handy when you want to debug a piece of code,\nand possibly want to recreate an object with a certain state for testing.</p>\n<p>One more thing to note is that the <code>__repr__</code> method is called implicitly by the <code>print</code> function if that method has been\noverriden and the <code>__str__</code> method has not. </p>\n<p>So if our Movie class only had the <code>__repr__</code> method, then that will be used to get the string representation.</p>\n<p>It’s a good practice to provide both, but the <code>__str__</code> method is arguable more important than the <code>__repr__</code> in daily programming.</p>","frontmatter":{"title":"Python's repr and str methods","date":"July 22, 2020","description":"What are the differences?"}}},"pageContext":{"slug":"/python's-repr-and-str-methods/","previous":null,"next":null}}}